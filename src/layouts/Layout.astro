---
import { ViewTransitions } from 'astro:transitions';

interface Props {
	title: string;
	description?: string;
}

const { title, description = "Full Stack Developer Portfolio - Andr√©s Fabregas" } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="description" content={description} />
		<title>{title}</title>
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<ViewTransitions />
	</head>
	<body class="bg-black text-green-500 min-h-screen font-mono">
		<div class="fixed inset-0 bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] from-green-900/20 via-black to-black pointer-events-none"></div>
		<div class="relative z-10">
			<slot />
		</div>
		<style is:global>
			:root {
				--accent: 16, 185, 129;
				--accent-light: 34, 197, 94;
				--accent-dark: 6, 95, 70;
				--accent-gradient: linear-gradient(45deg, rgb(var(--accent)), rgb(var(--accent-light)) 30%, white 60%);
			}
			html {
				font-family: system-ui, sans-serif;
				background: #000;
				background-size: 224px;
			}
			body {
				margin: 0;
				padding: 0;
			}
			.glow {
				text-shadow: 0 0 10px rgb(var(--accent)), 0 0 20px rgb(var(--accent)), 0 0 30px rgb(var(--accent));
			}
			.terminal-text {
				font-family: 'Courier New', Courier, monospace;
			}
			@keyframes cursor-blink {
				0%, 100% { opacity: 1; }
				50% { opacity: 0; }
			}
			.cursor-blink::after {
				content: '|';
				animation: cursor-blink 1s infinite;
			}
			@keyframes float {
				0% { transform: translateY(0px); }
				50% { transform: translateY(-20px); }
				100% { transform: translateY(0px); }
			}
			.float-animation {
				animation: float 6s ease-in-out infinite;
			}
		</style>
	</body>
</html>
