---
import { Image } from 'astro:assets';
---

<section class="min-h-screen flex items-center justify-center relative overflow-hidden">
  <div class="absolute inset-0 bg-[radial-gradient(circle_at_center,_var(--tw-gradient-stops))] from-[#00FF00]/10 via-black to-black"></div>
  
  <!-- Animated grid lines -->
  <div class="absolute inset-0 grid-lines"></div>
  
  <!-- Floating code elements -->
  <div class="absolute inset-0 overflow-hidden">
    <div class="floating-code code-1">&lt;code&gt;</div>
    <div class="floating-code code-2">&lt;/&gt;</div>
    <div class="floating-code code-3">{}</div>
    <div class="floating-code code-4">&lt;div&gt;</div>
    <div class="floating-code code-5">function()</div>
  </div>
  
  <div class="container mx-auto px-4 z-10">
    <div class="text-center">
      <div class="terminal-window mb-8 mx-auto max-w-2xl animate-pulse-slow">
        <div class="terminal-header">
          <div class="terminal-buttons">
            <span class="terminal-button close"></span>
            <span class="terminal-button minimize"></span>
            <span class="terminal-button maximize"></span>
          </div>
          <div class="terminal-title text-[#00FF00]">andres@portfolio:~$</div>
        </div>
        <div class="terminal-body">
          <div class="typing-text">
            <span class="text-[#00FF00]">$</span> <span class="typed-text text-[#00FF00]"></span><span class="cursor-blink"></span>
          </div>
        </div>
      </div>
      
      <h1 class="text-6xl md:text-8xl font-bold mb-6 text-[#00FF00] glow">
        <span class="inline-block animate-float">ANDRÉS</span>
        <span class="inline-block animate-float" style="animation-delay: 0.2s">FABREGAS</span>
      </h1>
      
      <div class="terminal-text text-2xl md:text-3xl mb-8 text-[#00FF00] animate-fade-in">
        <span class="text-[#00FF00]">&gt;</span>
        <span class="cursor-blink"> Electronic Engineering | Software Developer</span>
      </div>
      
      <p class="text-xl md:text-2xl text-[#00FF00] max-w-2xl mx-auto mb-12 animate-fade-in" style="animation-delay: 0.5s">
        Transformando ideas en experiencias digitales extraordinarias
      </p>
      
      <div class="flex justify-center gap-6 animate-fade-in" style="animation-delay: 1s">
        <a href="#projects" class="hacker-button">
          Ver Proyectos
        </a>
        <a href="#contact" class="hacker-button">
          Contactar
        </a>
      </div>
    </div>
  </div>

  <div class="absolute bottom-0 left-0 right-0 h-32 bg-gradient-to-t from-black to-transparent"></div>
  
  <div class="absolute inset-0 pointer-events-none">
    <div class="absolute top-1/4 left-1/4 w-64 h-64 bg-[#00FF00]/5 rounded-full blur-3xl pulse-animation"></div>
    <div class="absolute bottom-1/4 right-1/4 w-64 h-64 bg-[#00FF00]/5 rounded-full blur-3xl pulse-animation" style="animation-delay: 1s"></div>
  </div>
</section>

<style>
  @keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-20px); }
  }
  
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  
  @keyframes pulse-slow {
    0%, 100% { box-shadow: 0 0 20px rgba(0, 255, 0, 0.2); }
    50% { box-shadow: 0 0 30px rgba(0, 255, 0, 0.4); }
  }
  
  .animate-pulse-slow {
    animation: pulse-slow 4s ease-in-out infinite;
  }
  
  @keyframes fade-in {
    0% { opacity: 0; transform: translateY(20px); }
    100% { opacity: 1; transform: translateY(0); }
  }
  
  .animate-fade-in {
    animation: fade-in 1s ease-out forwards;
  }
  
  .terminal-window {
    background-color: rgba(0, 0, 0, 0.8);
    border: 1px solid rgba(0, 255, 0, 0.3);
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 0 20px rgba(0, 255, 0, 0.2);
  }
  
  .terminal-header {
    background-color: rgba(0, 255, 0, 0.1);
    padding: 8px;
    display: flex;
    align-items: center;
  }
  
  .terminal-buttons {
    display: flex;
    gap: 6px;
    margin-right: 10px;
  }
  
  .terminal-button {
    width: 12px;
    height: 12px;
    border-radius: 50%;
  }
  
  .terminal-button.close {
    background-color: #ff5f56;
  }
  
  .terminal-button.minimize {
    background-color: #ffbd2e;
  }
  
  .terminal-button.maximize {
    background-color: #27c93f;
  }
  
  .terminal-title {
    color: #00FF00;
    font-size: 14px;
  }
  
  .terminal-body {
    padding: 16px;
    min-height: 100px;
  }
  
  .typing-text {
    font-family: 'Courier New', Courier, monospace;
    color: #00FF00;
  }
  
  .hacker-button {
    @apply px-8 py-3 bg-[#00FF00]/10 border border-[#00FF00]/20 rounded-lg text-[#00FF00] hover:bg-[#00FF00]/20 hover:text-[#00FF00] transition-all duration-300;
    position: relative;
    overflow: hidden;
    z-index: 1;
  }
  
  .hacker-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, transparent, rgba(0, 255, 0, 0.2), transparent);
    transform: translateX(-100%);
    transition: transform 0.6s;
    z-index: -1;
  }
  
  .hacker-button:hover::before {
    transform: translateX(100%);
  }
  
  .grid-lines {
    background-image: 
      linear-gradient(to right, rgba(0, 255, 0, 0.1) 1px, transparent 1px),
      linear-gradient(to bottom, rgba(0, 255, 0, 0.1) 1px, transparent 1px);
    background-size: 50px 50px;
    mask-image: radial-gradient(circle at center, black 30%, transparent 70%);
  }
  
  .pulse-animation {
    animation: pulse 4s ease-in-out infinite;
  }
  
  @keyframes pulse {
    0%, 100% { transform: scale(1); opacity: 0.5; }
    50% { transform: scale(1.2); opacity: 0.8; }
  }
  
  .glow {
    text-shadow: 0 0 10px rgba(0, 255, 0, 0.5),
                 0 0 20px rgba(0, 255, 0, 0.3),
                 0 0 30px rgba(0, 255, 0, 0.2);
  }
  
  .floating-code {
    position: absolute;
    color: rgba(0, 255, 0, 0.3);
    font-family: 'Courier New', Courier, monospace;
    font-size: 1.5rem;
    font-weight: bold;
    opacity: 0.5;
    pointer-events: none;
  }
  
  .code-1 {
    top: 15%;
    left: 10%;
    animation: float-code 15s ease-in-out infinite;
  }
  
  .code-2 {
    top: 25%;
    right: 15%;
    animation: float-code 18s ease-in-out infinite;
    animation-delay: 2s;
  }
  
  .code-3 {
    bottom: 20%;
    left: 20%;
    animation: float-code 20s ease-in-out infinite;
    animation-delay: 4s;
  }
  
  .code-4 {
    top: 40%;
    right: 25%;
    animation: float-code 17s ease-in-out infinite;
    animation-delay: 1s;
  }
  
  .code-5 {
    bottom: 30%;
    right: 10%;
    animation: float-code 19s ease-in-out infinite;
    animation-delay: 3s;
  }
  
  @keyframes float-code {
    0%, 100% { transform: translate(0, 0) rotate(0deg); }
    25% { transform: translate(20px, -20px) rotate(5deg); }
    50% { transform: translate(0, -40px) rotate(0deg); }
    75% { transform: translate(-20px, -20px) rotate(-5deg); }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const texts = [
      "Inicializando sistema...",
      "Cargando perfil de desarrollador...",
      "Conectando a la base de datos...",
      "Bienvenido al portfolio de ANDRÉS FABREGAS"
    ];
    
    const typedTextElement = document.querySelector('.typed-text');
    if (!typedTextElement) return;
    
    let textIndex = 0;
    let charIndex = 0;
    let isDeleting = false;
    
    function type() {
      const currentText = texts[textIndex];
      
      if (isDeleting) {
        typedTextElement.textContent = currentText.substring(0, charIndex - 1);
        charIndex--;
      } else {
        typedTextElement.textContent = currentText.substring(0, charIndex + 1);
        charIndex++;
      }
      
      if (!isDeleting && charIndex === currentText.length) {
        isDeleting = true;
        setTimeout(type, 2000);
      } else if (isDeleting && charIndex === 0) {
        isDeleting = false;
        textIndex = (textIndex + 1) % texts.length;
        setTimeout(type, 500);
      } else {
        const typingSpeed = isDeleting ? 50 : 100;
        setTimeout(type, typingSpeed);
      }
    }
    
    setTimeout(type, 1000);
  });
</script> 